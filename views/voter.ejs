<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Voters</title>
    <style>
        body {
            font-family: Arial, sans-serif;
           background-image: url('/images/bg.jpeg');
           background-repeat: no-repeat;
           background-size: cover;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            margin-top: 2%;
            background-color: #f0f0f0;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
        }

        .candidate {
            border-bottom: 1px solid #ddd;
            padding: 15px 0;
            display: flex;
            align-items: center;
        }

        .candidate img {
            max-width: 80px;
            border-radius: 50%;
            margin-right: 20px;
        }

        .candidate-info {
            flex-grow: 1;
        }

        .candidate-info h2 {
            margin: 0;
            color: #333;
        }

        .candidate-info p {
            margin: 5px 0;
            color: #333;
        }

        /* Navigation bar styles */
        header {
            background-color: white;
            color: #5849e0;
            padding: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;

            font-weight: bold;
        }

        nav {
            display: flex;
            align-items: center;
            height:100px;
        }

        nav p {
            margin: 0;
            padding: 10px;
            color: #5849e0;
            font-size: larger;
            font-weight: bold;
        }

        nav a {
            color: #5849e0;
            text-decoration: none;
            padding: 10px;
            margin: 0 5px;
            border-radius: 5px;
            font-size: larger;
        }

        nav a:hover {
            background-color: #555;
        }

        /* Button styles */
        .btn {
            background-color:#5849e0;
            color: #fff;
            border: none;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
            margin-left: 10px;
            text-decoration: none;
        }

        .btn:hover {
            background-color: #555;
        }

        /* Custom styles for the Vote Now button */
        .btn-vote {
            background-color: #4CAF50;
            /* Green */
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            transition-duration: 0.4s;
            cursor: pointer;
            border-radius: 12px;
        }

        .btn-vote:hover {
            background-color: #054e08;
            /* Darker Green */
        }

        .btn-vote-disabled {
            background-color: #ff6666;
            /* Red */
            color: #fff;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            border-radius: 12px;
            border: none;
            cursor: not-allowed;
            pointer-events: none;
            /* Disable pointer events */
        }

        .voter-status-voted {
            background-color: #4CAF50;
            /* Green */
        }

        .voter-status-not-voted {
            background-color: #ff6666;
            /* Red */
        }

        .camera-container {
            position: fixed;
            bottom: 20px;
            /* Adjust as needed */
            right: 20px;
            /* Adjust as needed */
            z-index: 1000;
            /* Ensure the camera container stays above other elements */
            overflow: hidden;
        }

        .camera-container video {
            width: 200px;
            /* Adjust the size of the video as needed */
            height: auto;
            display: block;
        }
    </style>
</head>

<body>
    <header>
        <nav>
            <!-- Voter's name and Aadhar fetched from the server -->
            <p>Name: <strong>
                    <%= fname %>
                </strong></p>
            <p>Aadhar Id:<strong>
                    <%= aadharid %>
                </strong></p>
            <p>
                Place:<strong>
                    <%=district %> , <%=state%>
                </strong>
            </p>

        </nav>
        <nav>
            <p>

                VOTER STATUS:
            <p class="<%= hasVoted ? 'voter-status-voted' : 'voter-status-not-voted' %>">
                <%= hasVoted ? 'Voted' : 'Not Voted' %>
            </p>
            </p>
            <a href="/live-result">Live Result</a>
            <a href="/logout">Logout</a>
        </nav>
    </header>
    <div class="container">
        <h1>Candidates List</h1>
        <% candidates.forEach(candidate=> { %>
            <div class="candidate">
                <img src="/images/party_logos/<%= candidate.party_logo_path %>" alt="<%= candidate.party_name %> Logo">
                <div class="candidate-info">
                    <h2>
                        <%= candidate.full_name %>
                    </h2>
                    <p>
                        <%= candidate.party_name %>
                    </p>
                </div>
                <form id="voteForm_<%= candidate.candidate_id %>" class="vote-form"
                    action="/vote/<%= candidate.candidate_id %>" method="POST">
                    <button type="submit"
                        class="<%= hasVoted ? 'btn-vote-disabled' : 'btn-vote' %> <% if (hasVoted) { %> disabled <% } %>">
                        Vote Now
                    </button>
                </form>
            </div>
            <% }); %>
                <div class="camera-container">
                    <video id="camera-stream" autoplay></video>
                </div>

                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        const voteForms = document.querySelectorAll('.vote-form');

                        voteForms.forEach(form => {
                            form.addEventListener('submit', function (event) {
                                event.preventDefault(); // Prevent default form submission

                                const candidateId = this.getAttribute('action').split('/').pop(); // Extract candidate ID from form action

                                const recordConfirmation = confirm("You are being recorded.\nDo you want to proceed with voting?");

                                if (recordConfirmation) {
                                    // If user confirms recording, start camera immediately
                                    setTimeout(() => {
                                        startCamera(candidateId);
                                    }, 2000); // 2-second delay
                                }
                            });
                        });
                    });

                    // Function to start camera
                    function startCamera(candidateId) {
                        navigator.mediaDevices.getUserMedia({ video: true })
                            .then(function (stream) {
                                const video = document.getElementById('camera-stream');
                                video.srcObject = stream;

                                // Show the confirmation dialog for voting after the delay
                                setTimeout(() => {
                                    const voteConfirmation = confirm("Do you want to cast your vote?");
                                    if (voteConfirmation) {
                                        // Proceed with voting via AJAX
                                        fetch(`/vote/${candidateId}`, {
                                            method: 'POST',
                                            credentials: 'same-origin', // Ensure session cookies are sent
                                        }).then(response => {
                                            if (!response.ok) {
                                                throw new Error('Failed to vote for candidate');
                                            }
                                            // Handle success (e.g., update UI)
                                            console.log('Voted successfully for candidate:', candidateId);
                                            // Redirect to the main page after voting
                                            window.location.href = '/';
                                        }).catch(error => {
                                            // Handle error
                                            console.error('Error voting for candidate:', error);
                                        });
                                    }
                                }, 2000); // 2-second delay
                            })
                            .catch(function (err) {
                                console.error('Error accessing camera:', err);
                                alert('Error accessing camera. Please check if your camera is properly connected.');
                            });
                    }
                </script>
</body>

</html>